package ProgramStreams;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Stream;

import org.testng.annotations.Test;

public class Test1 
{
	@Test
	public void regular()
	{
		List<String> names = new ArrayList<String>();
		names.add("Amar");
		names.add("Raman");
		names.add("Asit");
		names.add("Ajay");
		names.add("Nitu");
		int count =0;

		for (int i=0; i<names.size();i++)
		{
			String actual = names.get(i);
			if(actual.startsWith("A"))
			{
				count++;
			}

		}
		System.out.println(count);

	}
	/* ---------------------------Optimization process---------------------*/
	@Test
	public void streamFilter()
	{
		List<String> names = new ArrayList<String>();
		names.add("Amari");
		names.add("Raman");
		names.add("Asit");
		names.add("Ajay");
		names.add("Nitu");
		/*
		 * There is no life of intermediate operation if there is no terminal
		 * Terminal operation will execute only if intermediate operation(filter) return Trur
		 * we can create stream
		 * how to use filter in stream API 

		Long c = names.stream().filter(s->s.startsWith("A")).count();
		System.out.println(c);
		 */
		Long d = Stream.of("Amari","Raman","Asit","Ajay","Nitu").filter(t->
		{
			t.startsWith("A");
			return true;
		}).count();

		System.out.println(d);
		//Print all the Names of ArrayList

		names.stream().filter(s->s.length()>4).forEach(s->System.out.println(s));
		names.stream().filter(s->s.length()>4).limit(1).forEach(s->System.out.println(s));

	}
	@Test
	public void stramMap()
	{
		List<String> names = new ArrayList<String>();
		names.add("Man");
		names.add("Woman");
		names.add("None");
		//Print names which have last letter "a" with Upercase
		Stream.of("Amari","Rama","Asit","Ajay","Nitu").filter(s->s.endsWith("a")).map(s->s.toUpperCase())
		.forEach(s->System.out.println(s));

		List<String> namesList =Arrays.asList("Amari","Rama","Asit","Ajay","Nitu");
		namesList.stream().filter(s->s.startsWith("A")).sorted()
		.map(s->s.toUpperCase()).forEach(s->System.out.println(s));
	//Merging 2 different Lists
		Stream<String>newStraem = Stream.concat(names.stream(), namesList.stream());
		
		
	}

}


