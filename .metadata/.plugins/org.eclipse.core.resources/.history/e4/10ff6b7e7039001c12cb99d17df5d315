package ProgramStreams;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Stream;

import org.testng.annotations.Test;

public class Test1 
{
	@Test
	public void regular()
	{
		List<String> names = new ArrayList<String>();
		names.add("Amar");
		names.add("Raman");
		names.add("Asit");
		names.add("Ajay");
		names.add("Nitu");
		int count =0;

		for (int i=0; i<names.size();i++)
		{
			String actual = names.get(i);
			if(actual.startsWith("A"))
			{
				count++;
			}

		}
		System.out.println(count);

	}
	/* ---------------------------Optimization process---------------------*/
	@Test
	public void streamFilter()
	{
		List<String> names = new ArrayList<String>();
		names.add("Amar");
		names.add("Raman");
		names.add("Asit");
		names.add("Ajay");
		names.add("Nitu");
		/*
		 * There is no life of intermediate operation if there is no terminal
		 * Terminal operation will execute only if intermediate operation(filter) return Trur
		 * we can create stream
		 * how to use filter in stream API 
		 */
		Long c = names.stream().filter(s->s.startsWith("A")).count();
		System.out.println(c);

		Long d = Stream.of("Amar","Raman","Asit","Ajay","Nitu").filter(t->
		
			t.startsWith("A");
			return true;
		).count();

		System.out.println(d);
	}

}


